name: Optimized Kernel Builder

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Cache submodules
      uses: actions/cache@v3
      with:
        path: |
          .git/modules
          */.git
        key: ${{ runner.os }}-submodules-${{ hashFiles('.gitmodules') }}

    - name: Cache apt packages
      uses: actions/cache@v3
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('**/build.sh') }}

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          git-core gnupg flex bison build-essential zip curl \
          zlib1g-dev libc6-dev-i386 x11proto-core-dev libx11-dev \
          lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig

    - name: Build kernels
      run: |
        chmod +x build.sh
        MODELS=("d1" "d1xks" "d2s" "d2x" "d2xks")
        
        for model in "${MODELS[@]}"; do
          echo "ðŸ”¨ Building for $model"
          ./build.sh --model "$model" --ksu Y --debug N || exit 1
        done

    - name: List generated ZIP files (debug)
      run: |
        echo "Generated files:"
        find build/out -name "*.zip" -exec ls -lh {} \;

    - name: Upload artifacts per device
      uses: actions/upload-artifact@v4
      with:
        name: kernel-artifacts-${{ steps.tag.outputs.tag_name }}
        path: |
          build/out/d1/*.zip
          build/out/d1xks/*.zip
          build/out/d2s/*.zip
          build/out/d2x/*.zip
          build/out/d2xks/*.zip
          build/out/*/*.md5
        if-no-files-found: error